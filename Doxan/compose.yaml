services:
  postgres:
    image: 'postgres:latest'
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: 'redis:latest'
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - backend

  mongodb:
    image: 'mongo:latest'
    container_name: mongodb
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"  # Host access (for broker)
    environment:
      KAFKA_KRAFT_CLUSTER_ID: "kraft-cluster-1"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - backend

#  app:
#    build: .
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_DATA_MONGODB_URI: mongodb://admin:admin123@mongodb:27017/verlink_db?authSource=admin
#    depends_on:
#      - kafka
#      - mongodb
#      - postgres
#      - redis
#    networks:
#      - backend


volumes:
  postgres_data:
  redis_data:
  mongo_data:
  kafka_data:

networks:
  backend:
    driver: bridge
